// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Server.Data;

#nullable disable

namespace Server.Migrations
{
    [DbContext(typeof(IquraWordsDbContext))]
    [Migration("20230430125059_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Server.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("Server.Models.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Term")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("Word");
                });

            modelBuilder.Entity("Server.Models.WordMeaning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Image_URL")
                        .HasColumnType("text");

                    b.Property<int>("Meaning_Id")
                        .HasColumnType("integer")
                        .HasColumnName("Meaning_Id");

                    b.Property<int>("Term_Id")
                        .HasColumnType("integer")
                        .HasColumnName("Term_Id");

                    b.Property<int>("Verified")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Meaning_Id");

                    b.HasIndex("Term_Id");

                    b.ToTable("WordMeaning");
                });

            modelBuilder.Entity("Server.Models.Word", b =>
                {
                    b.HasOne("Server.Models.Language", "Language")
                        .WithMany("Words")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Server.Models.WordMeaning", b =>
                {
                    b.HasOne("Server.Models.Word", "Meaning")
                        .WithMany("Meanings")
                        .HasForeignKey("Meaning_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Models.Word", "Term")
                        .WithMany("Terms")
                        .HasForeignKey("Term_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meaning");

                    b.Navigation("Term");
                });

            modelBuilder.Entity("Server.Models.Language", b =>
                {
                    b.Navigation("Words");
                });

            modelBuilder.Entity("Server.Models.Word", b =>
                {
                    b.Navigation("Meanings");

                    b.Navigation("Terms");
                });
#pragma warning restore 612, 618
        }
    }
}
